(define (level-flatten dl)
  (define (helper level dl)
    (cond ((null? dl) '())
          ((list? (car dl))
           (append (helper (+ level 1) (car dl))
                   (helper level (cdr dl))))
          (else (cons (+ (car dl) level)
                      (helper level (cdr dl))))))

  (helper 1 dl))

(load "../../../testing/check.scm")

(check (level-flatten '()) => '())
(check (level-flatten '(0)) => '(1))
(check (level-flatten '(1)) => '(2))
(check (level-flatten '(1 2 3)) => '(2 3 4))
(check (level-flatten '(1 (2 1 0) 3)) => '(2 4 3 2 4))
(check (level-flatten '(1 () ((2 2 (()))) 3)) => '(2 5 5 4))
(check (level-flatten '(1 (2 3) 4 (5 (6)) (7))) => '(2 4 5 5 7 9 9))
(check (level-flatten '(1 (2 3) 4 ((5 ((6)))))) => '(2 4 5 5 8 11))
(check (level-flatten '(1 (2 (2 4) 1) 0 (3 (1)))) => '(2 4 5 7 3 1 5 4))

(check-report)
(check-reset!)
